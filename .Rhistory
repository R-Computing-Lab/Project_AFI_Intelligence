C<-C[c("Intel_Mom_mean","Intel_Mom_diff","Intel_Kid_mean","Intel_Kid_diff","AFI_Mom_mean","AFI_Mom_diff","AFI_Kid_mean","AFI_Kid_diff")]
##
## Plot
corrplot(Cor(C), method = "ellipse",type="lower",tl.col="black")
@
\end{center}
\pagebreak
\begin{center}
\captionof{figure}{Spagetti Plot}
\label{plot_spagetti}
<<plot_spagetti,fig=TRUE,echo=FALSE,cache=FALSE, fig.height=7, fig.width=7,out.width=".8\\paperwidth",warning=FALSE>>=
dataframe<- LinkedMDAN_discord_AFI_z_9
C<-dataframe[,c(2,8,13,23,24,26,31,41,42)]#,56,57,66,67,70,71
##
## Rename variabls
names(C)<-c("ID","Intel_Mom_1","AFI_Mom_1","AFI_Kid_1","Intel_Kid_1","Intel_Mom_2","AFI_Mom_2","AFI_Kid_2","Intel_Kid_2")
##
## Reorder Variables
C<-C[c("ID","Intel_Mom_1","Intel_Mom_2","Intel_Kid_1","Intel_Kid_2","AFI_Mom_1","AFI_Mom_2","AFI_Kid_1","AFI_Kid_2")]
C2<-C
names(C2)<-c("ID","Intel_Mom_2","Intel_Mom_1","Intel_Kid_2","Intel_Kid_1","AFI_Mom_2","AFI_Mom_1","AFI_Kid_2","AFI_Kid_1")
C2<-C2[c("ID","Intel_Mom_1","Intel_Mom_2","Intel_Kid_1","Intel_Kid_2","AFI_Mom_1","AFI_Mom_2","AFI_Kid_1","AFI_Kid_2")]
Stack<-rbind(C,C2)
Stack$slope <- (Stack$AFI_Kid_2-Stack$AFI_Kid_1)/(Stack$Intel_Kid_2-Stack$Intel_Kid_1+.0000000000000000001)
#Mean(Stack$slope)
Stack$slopebinary<- as.numeric(NA)
Stack$slopebinary[Stack$slope>0]<- 1
Stack$slopebinary[Stack$slope<0]<- -1
Stack$slopebinary[Stack$slope==0]<- 0
Stack$slopebinary<-factor(Stack$slopebinary, levels=c("1", "0", "-1"), labels=c("Positive", "Zero", "Negative"))
Stack2<-Stack[,c(1,2,4,6,8,11)]
mytheme <- theme_classic() %+replace%
theme(axis.title.x = element_text(face="bold",angle=0),
axis.title.y = element_text(face="bold",angle=90))
p1 <- ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5)) + geom_rect(colour="black",fill="white",aes(xmin=1,xmax=4.1,ymin=43,ymax=55))
d <- data.frame(Slopes = c( "Mean Slope = -1.662", "Median Slope = 0.055"))
p1 +annotate(x=2.5,y=50,geom="text",label=l1)
@
\end{center}
%%%%%%%%%%%% References %%%%%%%%%%%%
\bibliography{Projects-AFI}
%
%%%%%%%%%%%% Appendix %%%%%%%%%%%%
\appendix\label{appen}
%
% Age 10.5 Replication
\section{Age 10.5 Replication}\label{appen10}
%% Measurement
%%% Measurement Model
\begin{longtable}{@{\extracolsep{5pt}}cc}
\caption{Gen2 Measurement Model.}\label{table_gen2measurement_10}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& g at Age 10.5 \\
\hline \\[-1.8ex]
\partialinput{12}{34}{../Common/content/tables/table_g2_10measurement.tex}
\end{longtable}\pagebreak
%%%
%%% Factor Loadings
\begin{longtable}{@{\extracolsep{5pt}}cccccc}
\caption{Gen2 Factor Loadings.}\label{table_g2loading_10}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& Test & Estimate & S.E. & Est./.S.E. & P Value \\
\hline \\[-1.8ex]
\partialinput{12}{17}{../Common/content/tables/table_g2loading_10.tex}
\end{longtable}\pagebreak
%%
%% Between Family
\begin{landscape}
\subsection{Between Family Analyses}
%%%
%%% Mom -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Mean Gen1 Mean Intelligence $\rightarrow$ Gen2 Mean AFI}\label{table_Mean_Mom_Intelligence_Mean_Child_AFI_10}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Average of Gen2 AFI} \\
\cline{2-4}
\partialinput{10}{22}{../Common/content/tables/table_Mean_Mom_Intelligence_Mean_Child_AFI_10.tex}
\end{longtable}\pagebreak
%%%
%%% Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Gen2 Mean Intelligence $\rightarrow$ Gen2 Mean AFI}\label{table_Mean_Child_Intelligence_Mean_Child_AFI_10}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Average of Gen2 AFI} \\
\cline{2-4}
\partialinput{10}{22}{../Common/content/tables/table_Mean_Child_Intelligence_Mean_Child_AFI_10.tex}
\end{longtable}\pagebreak
%%%
%%% Mom Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Mean Joint Intelligence $\rightarrow$ Gen2 Mean AFI}\label{table_Mean_Joint_Intelligence_Mean_Child_AFI_10}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Average of Gen2 AFI} \\
\cline{2-4}
\partialinput{10}{23}{../Common/content/tables/table_Mean_Joint_Intelligence_Mean_Child_AFI_10.tex}
\end{longtable}\pagebreak
%%
%% Within Family
\subsection{Within Family Analyses}
%%%
%%% Mom -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Gen1 Dif Intelligence $\rightarrow$ Gen2 Dif AFI}\label{table_Dif_Mom_Intelligence_Dif_Child_AFI_10}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Difference in Gen2 Mean AFI} \\
\cline{2-4}
\partialinput{10}{24}{../Common/content/tables/table_Dif_Mom_Intelligence_Dif_Child_AFI_10.tex}
\end{longtable}\pagebreak
%%%
%%% Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Gen2 Dif Intelligence $\rightarrow$ Gen2 Dif AFI}\label{table_Dif_Child_Intelligence_Dif_Child_AFI_10}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Difference in Gen2 Mean AFI} \\
\cline{2-4}
\partialinput{10}{24}{../Common/content/tables/table_Dif_Child_Intelligence_Dif_Child_AFI_10.tex}
\end{longtable}\pagebreak
%%%
%%% Mom Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Joint Dif Intelligence $\rightarrow$ Gen2 Dif AFI}\label{table_Dif_Joint_Intelligence_Dif_Child_AFI_10}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Difference in Gen2 Mean AFI} \\
\cline{2-4}
\partialinput{10}{26}{../Common/content/tables/table_Dif_Joint_Intelligence_Dif_Child_AFI_10.tex}
\end{longtable}
\end{landscape}
%
% Age 11.5 Replication
\section{Age 11.5 Replication}\label{appen11}
%% Measurement
%%% Measurement Model
\begin{longtable}{@{\extracolsep{5pt}}cc}
\caption{Gen2 Measurement Model.}\label{table_gen2measurement_11}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& g at Age 11.5 \\
\hline \\[-1.8ex]
\partialinput{12}{34}{../Common/content/tables/table_g2_11measurement.tex}
\end{longtable}\pagebreak
%%%
%%% Factor Loadings
\begin{longtable}{@{\extracolsep{5pt}}cccccc}
\caption{Gen2 Factor Loadings.}\label{table_g2loading_11}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& Test & Estimate & S.E. & Est./.S.E. & P.Value \\
\hline \\[-1.8ex]
\partialinput{12}{17}{../Common/content/tables/table_g2loading_11.tex}
\end{longtable}\pagebreak
%%
%% Between Family
\begin{landscape}
\subsection{Between Family Analyses}
%%%
%%% Mom -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Mean Gen1 Mean Intelligence $\rightarrow$ Gen2 Mean AFI}\label{table_Mean_Mom_Intelligence_Mean_Child_AFI_11}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Average of Gen2 AFI} \\
\cline{2-4}
\partialinput{10}{22}{../Common/content/tables/table_Mean_Mom_Intelligence_Mean_Child_AFI_11.tex}
\end{longtable}\pagebreak
%%%
%%% Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Gen2 Mean Intelligence $\rightarrow$ Gen2 Mean AFI}\label{table_Mean_Child_Intelligence_Mean_Child_AFI_11}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Average of Gen2 AFI} \\
\cline{2-4}
\partialinput{10}{22}{../Common/content/tables/table_Mean_Child_Intelligence_Mean_Child_AFI_11.tex}
\end{longtable}\pagebreak
%%%
%%% Mom Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Mean Joint Intelligence $\rightarrow$ Gen2 Mean AFI}\label{table_Mean_Joint_Intelligence_Mean_Child_AFI_11}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Average of Gen2 AFI} \\
\cline{2-4}
\partialinput{10}{23}{../Common/content/tables/table_Mean_Joint_Intelligence_Mean_Child_AFI_11.tex}
\end{longtable}\pagebreak
%%
%% Within Family
\subsection{Within Family Analyses}
%%%
%%% Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Gen1 Dif Intelligence $\rightarrow$ Gen2 Dif AFI}\label{table_Dif_Mom_Intelligence_Dif_Child_AFI_11}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Differences in Gen2 Mean AFI} \\
\cline{2-4}
\partialinput{10}{24}{../Common/content/tables/table_Dif_Mom_Intelligence_Dif_Child_AFI_11.tex}
\end{longtable}\pagebreak
%%%
%%% Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Gen2 Dif Intelligence $\rightarrow$ Gen2 Dif AFI}\label{table_Dif_Child_Intelligence_Dif_Child_AFI_11}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Differences in Gen2 Mean AFI} \\
\cline{2-4}
\partialinput{10}{24}{../Common/content/tables/table_Dif_Child_Intelligence_Dif_Child_AFI_11.tex}
\end{longtable}\pagebreak
%%%
%%% Mom Child -> Child
\begin{longtable}{@{\extracolsep{5pt}}lccc}
\caption{Dif Joint Intelligence $\rightarrow$ Gen2 Dif AFI}\label{table_Dif_Joint_Intelligence_Dif_Child_AFI_11}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
& \multicolumn{3}{c}{\textit{Dependent variable:} Differences in Gen2 Mean AFI} \\
\cline{2-4}
\partialinput{10}{26}{../Common/content/tables/table_Dif_Joint_Intelligence_Dif_Child_AFI_11.tex}
\end{longtable}
\end{landscape}
%
\end{document}
p1 <- ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5)) + geom_rect(colour="black",fill="white",aes(xmin=1,xmax=4.1,ymin=43,ymax=55))
d <- data.frame(Slopes = c( "Mean Slope = -1.662", "Median Slope = 0.055"))
p1 +annotate(x=2.5,y=50,geom="text",label=l1)
ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5)) + geom_rect(colour="black",fill="white",aes(xmin=1,xmax=4.1,ymin=43,ymax=55))
ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5)) + geom_rect(colour="black",fill="white",aes(xmin=1,xmax=4.1,ymin=4,ymax=5))
p1 <- ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + geom_rect(colour="black",fill="white",aes(xmin=1,xmax=4.1,ymin=4,ymax=5)) + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5))
d <- data.frame(Slopes = c( "Mean Slope = -1.662", "Median Slope = 0.055"))
p1 +annotate(x=2.5,y=50,geom="text",label=l1)
p1
geom_rect(aes(xmin=1,xmax=4.1,ymin=4,ymax=5))
ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + geom_rect(aes(xmin=1,xmax=4.1,ymin=4,ymax=5)) + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5))
p1 +annotate(x=2.5,y=50,geom="rect",label=l1)
p1 +annotate(x=2.5,y=50,geom="rect")
p1 <- ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5))
d <- data.frame(Slopes = c( "Mean Slope = -1.662", "Median Slope = 0.055"))
p1 +annotate(x=2.5,y=50,geom="rect")
p1 +annotate(x=2.5,y=50,geom="rect")
p1
p1 <- ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5))
p1
ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5))
mytheme <- theme_classic() %+replace%
theme(axis.title.x = element_text(face="bold",angle=0),
axis.title.y = element_text(face="bold",angle=90))
p1 <- ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
mytheme +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5))
p1
ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7"))
mytheme <- theme_classic() %+replace%
theme(axis.title.x = element_text(face="bold",angle=0),
axis.title.y = element_text(face="bold",angle=90))
p1 <- ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5))
p1
mytheme <- theme_classic() %+replace%
theme(axis.title.x = element_text(face="bold",angle=0),
axis.title.y = element_text(face="bold",angle=90))
p1 <- ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4) + theme(legend.position="right",  legend.justification=c(1, 0.5))
p1
detach("package:gridGraphics", unload=TRUE)
detach("package:gridExtra", unload=TRUE)
p1
ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary)) +
mytheme + scale_colour_manual(name = "Within Family \nSlope",values= c("#56B4E9", "#009E73", "#CC79A7")) +
#coord_trans(y="log10", limy=c(1000,6000)) +
labs(list(title = "Gen2. Within Family Spagetti Plot of \nAFI by Intelligence", y = "Gender Standardized AFI", x = "Standardized Intelligence")) +
geom_line(size=1,alpha=0.4)
ggplot(data = Stack2, aes(x = Intel_Kid_1, y = AFI_Kid_1, group = ID, color=slopebinary))
Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))
p1 + annotate("abline",intercept=0, slope=1)
a<-Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))
length(Stack2)
nrow(Stack2)
n     <- nrow(Stack2)                    # length of vector
rho   <- Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))[1,2] # desired correlation = cos(angle)
theta <- acos(rho)             # corresponding angle
x1    <- rnorm(n, 1, 1)        # fixed given data
x2    <- rnorm(n, 2, 0.5)      # new random data
X     <- cbind(x1, x2)         # matrix
Xctr  <- scale(X, center=TRUE, scale=FALSE)   # centered columns (mean 0)
Id   <- diag(n)                               # identity matrix
Q    <- qr.Q(qr(Xctr[ , 1, drop=FALSE]))      # QR-decomposition, just matrix Q
P    <- tcrossprod(Q)          # = Q Q'       # projection onto space defined by x1
x2o  <- (Id-P) %*% Xctr[ , 2]                 # x2ctr made orthogonal to x1ctr
Xc2  <- cbind(Xctr[ , 1], x2o)                # bind to matrix
Y    <- Xc2 %*% diag(1/sqrt(colSums(Xc2^2)))  # scale columns to length 1
x <- Y[ , 2] + (1 / tan(theta)) * Y[ , 1]     # final new vector
cor(x1, x)                                    # check correlation = rho
summary(x)
summary(x1)
sd(x1)
sd(x)
scale(x)
Mean(Stack$slope)/Sd(Stack$slope)
Sd(Stack$slope)
(Stack$Intel_Kid_2-Stack$Intel_Kid_1)
(Stack$Intel_Kid_2-Stack$Intel_Kid_1)==0
Stack$slope <- (Stack$AFI_Kid_2-Stack$AFI_Kid_1)/(Stack$Intel_Kid_2-Stack$Intel_Kid_1)
Mean(Stack$slope)
1/Mean(Stack$slope)
rnorm(15, 0, 2)
x <- (-10:10)/10
btwn <- Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))[1,2] * x
within <- Median(Stack$slope)* x
df <- data.frame(x, btwn)
# create a copy of original data, but set y = x
# this data will be used for the one-to-one line
df2 <- data.frame(x, within)
# bind original and 'one-to-one data' together
df3 <- rbind.data.frame(df, df2)
# create a grouping variable to separate stat_smoothers based on original and one-to-one data
df3$grp <- as.factor(rep(1:2, each = nrow(df)))
# plot
# use original data for points
# use 'double data' for abline and one-to-one line, set colours by group
ggplot(df, aes(x = x, y = y)) +
geom_point(size = 3) +
stat_smooth(data = df3, aes(colour = grp), method = "lm", se = FALSE, size = 1) +
scale_colour_manual(values = c("red","blue"),
labels = c("abline", "one-to-one"),
name = "") +
theme(legend.position = "top")
df <- data.frame(x, y=btwn)
df2 <- data.frame(x, y=within)
df3 <- rbind.data.frame(df, df2)
df3$grp <- as.factor(rep(1:2, each = nrow(df)))
View(df3)
ggplot(df, aes(x = x, y = y)) +
geom_point(size = 3) +
stat_smooth(data = df3, aes(colour = grp), method = "lm", se = FALSE, size = 1) +
scale_colour_manual(values = c("red","blue"),
labels = c("abline", "one-to-one"),
name = "") +
theme(legend.position = "top")
ggplot2
library(ggplot2)
ggplot2
library(ggplot2)
ggplot(df, aes(x = x, y = y)) +
geom_point(size = 3) +
stat_smooth(data = df3, aes(colour = grp), method = "lm", se = FALSE, size = 1) +
scale_colour_manual(values = c("red","blue"),
labels = c("abline", "one-to-one"),
name = "") +
theme(legend.position = "top")
z=nrow(Stack2)
x <- (-5*z:3*z)/z
Stack2<-Stack[,c(1,2,4,6,8,11)]
### Generate within vs. between slopes
z=nrow(Stack2)/2
x <- (-5*z:3*z)/z
btwn <- Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))[1,2] * x
within <- Median(Stack$slope)* x
df <- data.frame(x, y=btwn)
# create a copy of original data, but set y = x
# this data will be used for the one-to-one line
df2 <- data.frame(x, y=within)
# bind original and 'one-to-one data' together
df3 <- rbind.data.frame(df, df2)
# create a grouping variable to separate stat_smoothers based on original and one-to-one data
df3$grp <- as.factor(rep(1:2, each = nrow(df)))
Stack2<-data.frame(Stack2,df3)
z=nrow(Stack2)/2 +1
x <- (-5*z:3*z)/z
z=nrow(Stack2)/2 +1
x <- (-5*z:3*z)/z
btwn <- Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))[1,2] * x
within <- Median(Stack$slope)* x
df <- data.frame(x, y=btwn)
# create a copy of original data, but set y = x
# this data will be used for the one-to-one line
df2 <- data.frame(x, y=within)
# bind original and 'one-to-one data' together
df3 <- rbind.data.frame(df, df2)
# create a grouping variable to separate stat_smoothers based on original and one-to-one data
df3$grp <- as.factor(rep(1:2, each = nrow(df)))
Stack2<-data.frame(Stack2,df3)
# plot
z=nrow(Stack2)/2 +2
x <- (-5*z:3*z)/z
btwn <- Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))[1,2] * x
within <- Median(Stack$slope)* x
df <- data.frame(x, y=btwn)
# create a copy of original data, but set y = x
# this data will be used for the one-to-one line
df2 <- data.frame(x, y=within)
# bind original and 'one-to-one data' together
df3 <- rbind.data.frame(df, df2)
# create a grouping variable to separate stat_smoothers based on original and one-to-one data
df3$grp <- as.factor(rep(1:2, each = nrow(df)))
Stack2<-data.frame(Stack2,df3)
(-5*z:3*z)/z
z=as.numeric(nrow(Stack2)/2 +2)
x <- (-5*z:3*z)/z
-5*z
x <- (-5*z:3*z)
x<-x/z
x
x <- (-5*z:3*z)
x<-x/z
x/2
x/2[]1
x/2[1]1
x/2[1]
x/2[1,]
x/2[,1]
x*.5
x<-x*.5
1/z
z<- 1/z
x<-x*z
btwn <- Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))[1,2] * x
within <- Median(Stack$slope)* x
df <- data.frame(x, y=btwn)
df2 <- data.frame(x, y=within)
# bind original and 'one-to-one data' together
df3 <- rbind.data.frame(df, df2)
df3$grp <- as.factor(rep(1:2, each = nrow(df)))
Stack2<-data.frame(Stack2,df3)
z=as.numeric(nrow(Stack2)/2 +2)
x <- (-5*z:3*z)
z<- 1/z
x<-x*z
btwn <- Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))[1,2] * x
within <- Median(Stack$slope)* x
df <- data.frame(x, y=btwn)
z=as.numeric(nrow(Stack2)/2 +2)
x<-x/351
View(df3)
z=as.numeric(nrow(Stack2)/2 +2)
z=as.numeric(nrow(Stack2)/2)
-5*351
3*351
x <- (-1755:1053)/351
x <- (-349:349)
-5:3
698/2
count(-50:30)
349:count(-50:30)
349?count(-50:30)
349/count(-50:30)
349/81
x <- rep(-5:3, length=349)
698/3
x <- rep(-5:5, length=233)
btwn <- Cor(data.frame(Stack2$AFI_Kid_1,Stack2$Intel_Kid_1))[1,2] * x
within <- Mean(Stack$slope)* x
within2 <- Median(Stack$slope)* x
df <- data.frame(x, y=btwn)
# create a copy of original data, but set y = x
# this data will be used for the one-to-one line
df2 <- data.frame(x, y=within)
df22 <- data.frame(x, y=within2)
# bind original and 'one-to-one data' together
df3 <- rbind.data.frame(df, df2, df22)
# create a grouping variable to separate stat_smoothers based on original and one-to-one data
df3$grp <- as.factor(rep(1:3, each = nrow(df)))
df3[1:698]
df3[,1:698]
df3[1:698,]
