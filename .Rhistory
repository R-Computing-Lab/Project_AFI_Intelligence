## First Born Boy
LinkedMDAN_discord_AFI_b_11 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_boys_11121013.csv"))
#
# Models for age 11
## First Born Child
data=LinkedMDAN_discord_AFI_z_11
model.meankids_11<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.int_11<-lm(Int_Mean ~ INTMOMmean, data = data)
model.meanmoms_11<-lm(AFIKIDmean ~ INTMOMmean, data = data)
model.diffkids_11 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffmoms_11 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids_11 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean +INTMOMmean + Intdiff+  INTMOMdiff, data = data)
model.meanmomskids_11<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
model.diffmomsint_11 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff + Gendermean + INTMOMmean:Gendermean, data = data)
##
## First Born Girl
data=LinkedMDAN_discord_AFI_g_11
model.meankids.g_11<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.meanmoms.g_11<-lm(AFIKIDmean ~ INTMOMmean, data = data)
nested<-data
nested$Int_Mean[is.na(nested$Intdiff)] <- NA
model.diffkids.g_11<- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffkids.g.full_11 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = nested)
model.diffkids.g.nested_11 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean , data = nested)
anova_11<-anova(model.diffkids.g.nested_11,model.diffkids.g.full_11)
model.diffmoms.g_11<- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids.g_11 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean + Intdiff+ INTMOMmean + INTMOMdiff, data = data)
model.meanmomskids.g_11<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
##
## First Born Boy
data=LinkedMDAN_discord_AFI_b_11
model.meankids.b_11<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.meanmoms.b_11<-lm(AFIKIDmean ~ INTMOMmean, data = data)
model.meanmomskids.b_11<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
model.diffkids.b_11 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffmoms.b_11 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids.b_11 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean + Intdiff+ INTMOMmean + INTMOMdiff, data = data)
@
<<setup_summarystats,include=FALSE>>=
# Import Data
## Determine First Born
birthweight <- read.table(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/79/SASGen1Kids/birthweight.dat",sep=""), quote="\"", stringsAsFactors=FALSE)
names(birthweight)<-c('CASEID','MCASEID','RACE','SEX_G2','YRB','WGT')
birthweight$WGT[birthweight$WGT < 0] <- NA
birthweight$firstborn<-0
birthweight$firstborn<-substrRight(birthweight$CASEID,2)
birthweight_2<-birthweight
birthweight$born[birthweight$firstborn!="01"]<-0
birthweight$born[birthweight$firstborn=="01"]<-1
birthweight_fb <- birthweight[ which(birthweight$born==1), ]
##
## Gen 2 Demographics
new_data <- read.table(paste0(directory,'/Common/content/data/gen2demographics.dat'), sep=' ')
names(new_data) <- c('C0000100','C0000200','C0005300','C0005400')
### Handle missing values
new_data[new_data == -1] = NA  # Refused
new_data[new_data == -2] = NA  # Dont know
new_data[new_data == -3] = NA  # Invalid missing
new_data[new_data == -7] = NA  # Missing
### If there are values not categorized they will be represented as NA
vallabels = function(data) {
data$C0005300 <- factor(data$C0005300, levels=c(1.0,2.0,3.0), labels=c("Hispanic","Black","Non-Black, Non-Hispanic"))
data$C0005400 <- factor(data$C0005400, levels=c(1.0,2.0), labels=c("Male","Female"))
return(data)}
varlabels <- c("ID CODE OF CHILD",
"ID CODE OF MOTHER OF CHILD",
"RACE OF CHILD (FROM MOTHERS SCREENER 79)",
"SEX OF CHILD")
qnames = function(data) {
names(data) <- c("CASEID","MCASEID","RACE","CSEX")
return(data)
}
categories_g2 <- qnames(vallabels(new_data))
momintel <- read.csv(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/79/SASGen1/momintel.csv",sep=""), header=FALSE)
names(momintel)<-c("MCASEID","Intel_G1","Intel_G1_SE","HID")
##
## Gen2 intelligence
kidintel<-read.csv(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/79/kidsintl/cleaned_CFA_G_around_910811.csv",sep=""), header=FALSE)
names(kidintel)<-c("CASEID","ASEID","Intel_G2","Intel_G2_SE","MCASEID")
##
## Gen1 AFI
Gen1AFI_exportconcor <- read.csv(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/Gen1AFI_exportconcor_910811.csv",sep=""))
Gen1AFI_exportconcor <- Gen1AFI_exportconcor[2:length(Gen1AFI_exportconcor[,1]),]
names(Gen1AFI_exportconcor)<-c("MCASEID","AFI_G1")
##
## Gen2 AFI
Gen2AFI_exportconcor <- read.csv(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/Gen2AFI_exportconcor_910811.csv",sep=""))
names(Gen2AFI_exportconcor)<-c("CASEID","AFI_G2")
##
# Merge
Gen1AFIConcor <- merge(momintel,Gen1AFI_exportconcor,by="MCASEID",all=T)
Gen2AFIConcor <- merge(kidintel,Gen2AFI_exportconcor,by="CASEID",all=T)
Gen2AFIConcor_2 <- merge(categories_g2,Gen2AFI_exportconcor,by="CASEID",all=T)
\documentclass[a4paper,man,apacite,natbib,12pt]{apa6}
\usepackage{../Common/style/Mason}
\usepackage{listings}
\usepackage{inconsolata}
%%%%%%%%%%%% Title %%%%%%%%%%%%
\title{Intelligence and Age at First Intercourse: Cause or Confound?}
\shorttitle{Intelligence and AFI}
% Authors and Affliations
\author{S. Mason Garrison and Joseph Lee Rodgers}
\affiliation{Vanderbilt University}
% Author Note
\authornote{\input{../Common/content/title/authornote.txt}}
% Abstract
\abstract{Last compile was \today\ at \currenttime\\
%% Empirical Study
\input{../Common/content/title/abstract_empreport.txt}}
\begin{document}
\maketitle
%
%%%%%%%%%%%% R %%%%%%%%%%%%
<<sweave,echo=FALSE>>=
options(width=60)
options(scipen=999)
options(digits=3)
options(width=60)
#opts_chunk$set(fig.path='figure/beamer-',fig.align='center',fig.show='hold',size='footnotesize')
listing <- function(x, options) {
paste("\\begin{lstlisting}[style=Rsettings]\n",
x, "\\end{lstlisting}\n", sep = "")
}
knit_hooks$set(source=listing, output=listing)
@
<<setup, include=FALSE>>=
# Libraries
## Install Most Current Version
library(devtools)#;dev_mode(on=T)
#install_github("LiveOak/NlsyLinks")
#install_github("harrelfe/Hmisc");dev_mode(on=F)
## Attach Remaining
library(Hmisc)
library(MplusAutomation)
library(NlsyLinks)
library(plyr);library(psych)
library(stargazer)
library(tables)
library(xtable)
#
# File Structure
file_drive= "C:"
##file_drive="E:"
directory = paste0(file_drive,"/Dropbox/Work/Research/Projects/NLSY/AFI")
#setwd("C:/Dropbox/Work/Research/Projects/NLSY/AFI")
#
# Functions
## source("https://raw.githubusercontent.com/smasongarrison/Functions/master/Mason_Functions.R")
##
## ROUNDING FUNCTIONS
### Function rounds to three digits and defaults to na.rm = TRUE
### Cor
Cor <- function(x,digit=3, use="pairwise.complete.obs") {
round(cor(x, use = use),digit)}
### Max
Max <- function(x,digit=3,na.rm = TRUE) {
round(max(x, na.rm=na.rm),digit)}
### Mean
Mean <- function(x,digit=3,na.rm = TRUE) {
round(mean(x, na.rm=na.rm),digit)}
### Median
Median <- function(x,digit=3,na.rm = TRUE) {
round(median(x, na.rm=na.rm),digit)}
### Min
Min <- function(x,digit=3,na.rm = TRUE) {
round(min(x, na.rm=na.rm),digit)}
### RowMedians
RowMedians <-function(x,digit=3,na.rm = TRUE) {
round(rowMedians(as.matrix(x), na.rm=na.rm),digit)}
### Sd
Sd <- function(x,digit=3,na.rm = TRUE) {
round(sd(x, na.rm=na.rm),digit)}
@
<<setup_Data_9,include=FALSE>>=
# Import Data for age 9
## First Born Child
LinkedMDAN_discord_AFI_z_9 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_z_910811.csv"))
LinkedMDAN_discord_AFI_z_9$Gendermean<-as.factor(LinkedMDAN_discord_AFI_z_9$Gendermean)
##
## First Born Girl
LinkedMDAN_discord_AFI_g_9 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_girls_910811.csv"))
##
## First Born Boy
LinkedMDAN_discord_AFI_b_9 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_boys_910811.csv"))
#
# Models for age 9
## First Born Child
data=LinkedMDAN_discord_AFI_z_9
model.meankids_9<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.int_9<-lm(Int_Mean ~ INTMOMmean, data = data)
model.meanmoms_9<-lm(AFIKIDmean ~ INTMOMmean, data = data)
model.diffkids_9 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffmoms_9 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids_9 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean +INTMOMmean + Intdiff+  INTMOMdiff, data = data)
model.meanmomskids_9<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
model.diffmomsint_9 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff + Gendermean + INTMOMmean:Gendermean, data = data)
##
## First Born Girl
data=LinkedMDAN_discord_AFI_g_9
model.meankids.g_9<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.meanmoms.g_9<-lm(AFIKIDmean ~ INTMOMmean, data = data)
nested<-data
nested$Int_Mean[is.na(nested$Intdiff)] <- NA
model.diffkids.g_9<- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffkids.g.full_9 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = nested)
model.diffkids.g.nested_9 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean , data = nested)
anova_9<-anova(model.diffkids.g.nested_9,model.diffkids.g.full_9)
model.diffmoms.g_9<- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids.g_9 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean + Intdiff+ INTMOMmean + INTMOMdiff, data = data)
model.meanmomskids.g_9<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
##
## First Born Boy
data=LinkedMDAN_discord_AFI_b_9
model.meankids.b_9<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.meanmoms.b_9<-lm(AFIKIDmean ~ INTMOMmean, data = data)
model.meanmomskids.b_9<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
model.diffkids.b_9 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffmoms.b_9 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids.b_9 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean + Intdiff+ INTMOMmean + INTMOMdiff, data = data)
@
<<setup_Data_10,include=FALSE>>=
# Import Data for age 10
## First Born Child
LinkedMDAN_discord_AFI_z_10 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_z_1011912.csv"))
LinkedMDAN_discord_AFI_z_10$Gendermean<-as.factor(LinkedMDAN_discord_AFI_z_10$Gendermean)
##
## First Born Girl
LinkedMDAN_discord_AFI_g_10 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_girls_1011912.csv"))
##
## First Born Boy
LinkedMDAN_discord_AFI_b_10 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_boys_1011912.csv"))
#
# Models for age 10
## First Born Child
data=LinkedMDAN_discord_AFI_z_10
model.meankids_10<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.int_10<-lm(Int_Mean ~ INTMOMmean, data = data)
model.meanmoms_10<-lm(AFIKIDmean ~ INTMOMmean, data = data)
model.diffkids_10 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffmoms_10 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids_10 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean +INTMOMmean + Intdiff+  INTMOMdiff, data = data)
model.meanmomskids_10<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
model.diffmomsint_10 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff + Gendermean + INTMOMmean:Gendermean, data = data)
##
## First Born Girl
data=LinkedMDAN_discord_AFI_g_10
model.meankids.g_10<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.meanmoms.g_10<-lm(AFIKIDmean ~ INTMOMmean, data = data)
nested<-data
nested$Int_Mean[is.na(nested$Intdiff)] <- NA
model.diffkids.g_10<- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffkids.g.full_10 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = nested)
model.diffkids.g.nested_10 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean , data = nested)
anova_10<-anova(model.diffkids.g.nested_10,model.diffkids.g.full_10)
model.diffmoms.g_10<- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids.g_10 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean + Intdiff+ INTMOMmean + INTMOMdiff, data = data)
model.meanmomskids.g_10<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
##
## First Born Boy
data=LinkedMDAN_discord_AFI_b_10
model.meankids.b_10<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.meanmoms.b_10<-lm(AFIKIDmean ~ INTMOMmean, data = data)
model.meanmomskids.b_10<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
model.diffkids.b_10 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffmoms.b_10 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids.b_10 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean + Intdiff+ INTMOMmean + INTMOMdiff, data = data)
@
<<setup_Data_11,include=FALSE>>=
# Import Data for age 10
## First Born Child
LinkedMDAN_discord_AFI_z_11 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_z_11121013.csv"))
LinkedMDAN_discord_AFI_z_11$Gendermean<-as.factor(LinkedMDAN_discord_AFI_z_11$Gendermean)
##
## First Born Girl
LinkedMDAN_discord_AFI_g_11 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_girls_11121013.csv"))
##
## First Born Boy
LinkedMDAN_discord_AFI_b_11 <- read.csv(paste0(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/LinkedMDAN_discord_AFI_boys_11121013.csv"))
#
# Models for age 11
## First Born Child
data=LinkedMDAN_discord_AFI_z_11
model.meankids_11<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.int_11<-lm(Int_Mean ~ INTMOMmean, data = data)
model.meanmoms_11<-lm(AFIKIDmean ~ INTMOMmean, data = data)
model.diffkids_11 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffmoms_11 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids_11 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean +INTMOMmean + Intdiff+  INTMOMdiff, data = data)
model.meanmomskids_11<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
model.diffmomsint_11 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff + Gendermean + INTMOMmean:Gendermean, data = data)
##
## First Born Girl
data=LinkedMDAN_discord_AFI_g_11
model.meankids.g_11<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.meanmoms.g_11<-lm(AFIKIDmean ~ INTMOMmean, data = data)
nested<-data
nested$Int_Mean[is.na(nested$Intdiff)] <- NA
model.diffkids.g_11<- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffkids.g.full_11 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = nested)
model.diffkids.g.nested_11 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean , data = nested)
anova_11<-anova(model.diffkids.g.nested_11,model.diffkids.g.full_11)
model.diffmoms.g_11<- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids.g_11 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean + Intdiff+ INTMOMmean + INTMOMdiff, data = data)
model.meanmomskids.g_11<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
##
## First Born Boy
data=LinkedMDAN_discord_AFI_b_11
model.meankids.b_11<-lm(AFIKIDmean ~ Int_Mean, data = data)
model.meanmoms.b_11<-lm(AFIKIDmean ~ INTMOMmean, data = data)
model.meanmomskids.b_11<-lm(AFIKIDmean ~ INTMOMmean + Int_Mean, data = data)
model.diffkids.b_11 <- lm(AFIKIDdiff ~ AFIKIDmean + Int_Mean + Intdiff, data = data)
model.diffmoms.b_11 <- lm(AFIKIDdiff ~ AFIKIDmean + INTMOMmean + INTMOMdiff, data = data)
model.diffmomskids.b_11 <- lm(AFIKIDdiff ~ AFIKIDmean +Int_Mean + Intdiff+ INTMOMmean + INTMOMdiff, data = data)
@
<<setup_summarystats,include=FALSE>>=
# Import Data
## Determine First Born
birthweight <- read.table(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/79/SASGen1Kids/birthweight.dat",sep=""), quote="\"", stringsAsFactors=FALSE)
names(birthweight)<-c('CASEID','MCASEID','RACE','SEX_G2','YRB','WGT')
birthweight$WGT[birthweight$WGT < 0] <- NA
birthweight$firstborn<-0
birthweight$firstborn<-substrRight(birthweight$CASEID,2)
birthweight_2<-birthweight
birthweight$born[birthweight$firstborn!="01"]<-0
birthweight$born[birthweight$firstborn=="01"]<-1
birthweight_fb <- birthweight[ which(birthweight$born==1), ]
##
## Gen 2 Demographics
new_data <- read.table(paste0(directory,'/Common/content/data/gen2demographics.dat'), sep=' ')
names(new_data) <- c('C0000100','C0000200','C0005300','C0005400')
### Handle missing values
new_data[new_data == -1] = NA  # Refused
new_data[new_data == -2] = NA  # Dont know
new_data[new_data == -3] = NA  # Invalid missing
new_data[new_data == -7] = NA  # Missing
### If there are values not categorized they will be represented as NA
vallabels = function(data) {
data$C0005300 <- factor(data$C0005300, levels=c(1.0,2.0,3.0), labels=c("Hispanic","Black","Non-Black, Non-Hispanic"))
data$C0005400 <- factor(data$C0005400, levels=c(1.0,2.0), labels=c("Male","Female"))
return(data)}
varlabels <- c("ID CODE OF CHILD",
"ID CODE OF MOTHER OF CHILD",
"RACE OF CHILD (FROM MOTHERS SCREENER 79)",
"SEX OF CHILD")
qnames = function(data) {
names(data) <- c("CASEID","MCASEID","RACE","CSEX")
return(data)
}
categories_g2 <- qnames(vallabels(new_data))
momintel <- read.csv(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/79/SASGen1/momintel.csv",sep=""), header=FALSE)
names(momintel)<-c("MCASEID","Intel_G1","Intel_G1_SE","HID")
##
## Gen2 intelligence
kidintel<-read.csv(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/79/kidsintl/cleaned_CFA_G_around_910811.csv",sep=""), header=FALSE)
names(kidintel)<-c("CASEID","ASEID","Intel_G2","Intel_G2_SE","MCASEID")
##
## Gen1 AFI
Gen1AFI_exportconcor <- read.csv(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/CTT/Gen1AFI_exportconcor_910811.csv",sep=""))
Gen1AFI_exportconcor <- Gen1AFI_exportconcor[2:length(Gen1AFI_exportconcor[,1]),]
names(Gen1AFI_exportconcor)<-c("MCASEID","AFI_G1")
##
## Gen2 AFI
Gen2AFI_exportconcor <- read.csv(paste(file_drive,"/Dropbox/Software/SAS/MyFolders/NLSYSAS/Gen2AFI_exportconcor_910811.csv",sep=""))
names(Gen2AFI_exportconcor)<-c("CASEID","AFI_G2")
##
# Merge
Gen1AFIConcor <- merge(momintel,Gen1AFI_exportconcor,by="MCASEID",all=T)
Gen2AFIConcor <- merge(kidintel,Gen2AFI_exportconcor,by="CASEID",all=T)
Gen2AFIConcor_2 <- merge(categories_g2,Gen2AFI_exportconcor,by="CASEID",all=T)
dataframe<-data.frame(Gen2AFIConcor_2,Gen2AFIConcor$Intel_G2)
names(dataframe)
dataframe$RACEbySEX<-"0"
dataframe$RACE=='Hispance'
dataframe$RACE=='Hispanic'
dataframe$RACEbySEX<-"0"
### Hispanic
#### Male
dataframe$RACEbySEX[dataframe$RACE=='Hispanic'&dataframe$SEX=='Male']<-"Hispanic Male"
####
#### Female
dataframe$RACEbySEX[dataframe$RACE=='Hispanic'&dataframe$SEX=='Female']<-"Hispanic Female"
summary(dataframe$RACEbySEX)
describe(dataframe$RACEbySEX)
describe(as.factor(dataframe$RACEbySEX))
summary(as.factor(dataframe$RACEbySEX))
dataframe$RACE=='Hispanic'&dataframe$SEX=='Male'
dataframe$SEX=='Male'
names(dataframe)<- c("CASEID","MCASEID","RACE","SEX","AFI_G2","Intel_G2")
dataframe$RACEbySEX<-"0"
dataframe$RACE=='Hispanic' & dataframe$SEX=='Male'
dataframe$RACEbySEX[dataframe$RACE=='Hispanic' & dataframe$SEX=='Male']<-"Hispanic Male"
summary(as.factor(dataframe$RACEbySEX))
summary(as.factor(dataframe$RACE))
dataframe<-data.frame(Gen2AFIConcor_2,Gen2AFIConcor$Intel_G2)
names(dataframe)<- c("CASEID","MCASEID","RACE","SEX","AFI_G2","Intel_G2")
## Race by Sex factor
dataframe$RACEbySEX<-"0"
###
### Hispanic
#### Male
dataframe$RACEbySEX[dataframe$RACE=='Hispanic' & dataframe$SEX=='Male']<-"Hispanic Male"
####
#### Female
dataframe$RACEbySEX[dataframe$RACE=='Hispanic'&dataframe$SEX=='Female']<-"Hispanic Female"
###
### Black
#### Male
dataframe$RACEbySEX[dataframe$RACE=='Black'&dataframe$SEX=='Male']<-"Black Male"
####
#### Female
dataframe$RACEbySEX[dataframe$RACE=='Black'&dataframe$SEX=='Female']<-"Black Female"
###
### Non-Black, Non-Hispanic
#### Male
dataframe$RACEbySEX[dataframe$RACE=='Non-Black, Non-Hispanic'&dataframe$SEX=='Male']<-"Non-Black, Non-Hispanic Male"
####
#### Female
dataframe$RACEbySEX[dataframe$RACE=='Non-Black, Non-Hispanic'&dataframe$SEX=='Female']<-"Non-Black, Non-Hispanic Female"
summary(as.factor(dataframe$RACEbySEX))
dataframe$RACEbySEX[dataframe$RACE=='0']<-"Unknown"
summary(as.factor(dataframe$RACEbySEX))
dataframe$RACEbySEX[dataframe$RACEbySEX=='0']<-"Unknown"
summary(as.factor(dataframe$RACEbySEX))
cbbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7","#000000")
# Data Prep
dataframe<-data.frame(Gen2AFIConcor_2,Gen2AFIConcor$Intel_G2)
names(dataframe)<- c("CASEID","MCASEID","RACE","SEX","AFI","Intel")
## Race by Sex factor
dataframe$RACEbySEX<-"0"
###
### Hispanic
#### Male
dataframe$RACEbySEX[dataframe$RACE=='Hispanic' & dataframe$SEX=='Male']<-"Hispanic Male"
####
#### Female
dataframe$RACEbySEX[dataframe$RACE=='Hispanic'&dataframe$SEX=='Female']<-"Hispanic Female"
###
### Black
#### Male
dataframe$RACEbySEX[dataframe$RACE=='Black'&dataframe$SEX=='Male']<-"Black Male"
####
#### Female
dataframe$RACEbySEX[dataframe$RACE=='Black'&dataframe$SEX=='Female']<-"Black Female"
###
### Non-Black, Non-Hispanic
#### Male
dataframe$RACEbySEX[dataframe$RACE=='Non-Black, Non-Hispanic'&dataframe$SEX=='Male']<-"White Male"
####
#### Female
dataframe$RACEbySEX[dataframe$RACE=='Non-Black, Non-Hispanic'&dataframe$SEX=='Female']<-"White Female"
###
### Unknown Race
dataframe$RACEbySEX[dataframe$RACEbySEX=='0']<-"Unknown"
summary(as.factor(dataframe$RACEbySEX))
ggplot(dataframe, aes(x=AFI, colour=RACEbySEX, group=RACEbySEX))+ geom_density(fill=NA)+ theme_bw() + theme(axis.text=element_text(size=16), axis.title=element_text(size=16,face="bold"), plot.title=element_text(size=16,face="bold")) +  theme(legend.position="top",  legend.justification=c(1, 0.5)) +   xlab("AFI") + ylab("Density") +  ggtitle("Density Plots of AFI by Sex and Race")
revalue(dataframe$RACE, c("Non-Black, Non-Hispanic"="White"))
ggplot(dataframe, aes(x=AFI, y=Intel)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth() + theme_bw() + theme(axis.text=element_text(size=10), axis.title=element_text(size=12), plot.title=element_text(size=12)) +  theme(legend.position="right",  legend.justification=c(1, 0.5)) +   xlab("AFI") + ylab("Intelligence") +scale_colour_manual(values= c("#56B4E9", "#009E73", "#CC79A7")) + coord_cartesian(ylim=c(0,0.30), xlim=c(12,25))
library(ggplot2)
ggplot(dataframe, aes(x=AFI, y=Intel)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth() + theme_bw() + theme(axis.text=element_text(size=10), axis.title=element_text(size=12), plot.title=element_text(size=12)) +  theme(legend.position="right",  legend.justification=c(1, 0.5)) +   xlab("AFI") + ylab("Intelligence") +scale_colour_manual(values= c("#56B4E9", "#009E73", "#CC79A7")) + coord_cartesian(ylim=c(0,0.30), xlim=c(12,25))
ggplot(dataframe, aes(x=AFI, colour=RACE, group=RACEbySEX, linetype = SEX))+ geom_density(fill=NA,adjust=2)+ theme_bw() + theme(axis.text=element_text(size=10), axis.title=element_text(size=12), plot.title=element_text(size=12)) +  theme(legend.position="right",  legend.justification=c(1, 0.5)) +   xlab("AFI") + ylab("Density") +scale_colour_manual(values= c("#56B4E9", "#009E73", "#CC79A7")) #+ coord_cartesian(ylim=c(0,0.30), xlim=c(12,25))
ggplot(dataframe, aes(x=AFI, y=Intel)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth() + theme_bw() + theme(axis.text=element_text(size=10), axis.title=element_text(size=12), plot.title=element_text(size=12)) +  theme(legend.position="right",  legend.justification=c(1, 0.5)) +   xlab("AFI") + ylab("Intelligence") +scale_colour_manual(values= c("#56B4E9", "#009E73", "#CC79A7")) + coord_cartesian(ylim=c(0,0.30), xlim=c(12,25))
ggplot(dataframe, aes(x=AFI, y=Intel)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth() + theme_bw() + theme(axis.text=element_text(size=10), axis.title=element_text(size=12), plot.title=element_text(size=12)) +  theme(legend.position="right",  legend.justification=c(1, 0.5)) +   xlab("AFI") + ylab("Intelligence") +scale_colour_manual(values= c("#56B4E9", "#009E73", "#CC79A7")) #+ coord_cartesian(ylim=c(0,0.30), xlim=c(12,25))
ggplot(dataframe[dataframe$SEX=="Female"], aes(x=AFI, y=Intel)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth() + theme_bw() + theme(axis.text=element_text(size=10), axis.title=element_text(size=12), plot.title=element_text(size=12)) +  theme(legend.position="right",  legend.justification=c(1, 0.5)) +   xlab("AFI") + ylab("Intelligence") +scale_colour_manual(values= c("#56B4E9", "#009E73", "#CC79A7")) #+ coord_cartesian(ylim=c(0,0.30), xlim=c(12,25))
@
dataframeFEMALE<-dataframe[dataframe$SEX=="Female"]
dataframeF<-subset(dataframe, dataframe$SEX=="Female")
dataframeM<-subset(dataframe, dataframe$SEX=="Male")
ggplot(dataframeF, aes(x=AFI, y=Intel)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth() + theme_bw() + theme(axis.text=element_text(size=10), axis.title=element_text(size=12), plot.title=element_text(size=12)) +  theme(legend.position="right",  legend.justification=c(1, 0.5)) +   xlab("AFI") + ylab("Intelligence") +scale_colour_manual(values= c("#56B4E9", "#009E73", "#CC79A7")) #+ coord_cartesian(ylim=c(0,0.30), xlim=c(12,25))
Cor(data.frame(dataframe$AFI,dataframe$Intel))
Cor(data.frame(dataframeF$AFI,dataframeF$Intel))
Cor(data.frame(dataframeM$AFI,dataframeM$Intel))
install.packages("corrplot")
M<-Cor(dataframe)
dataframe$SEX<-as.numeric(dataframe$SEX)
dataframe$YRB<-birthweight$YRB
dataframe[,c(4,5,6,8)]
M<-Cor(dataframe[,c(4,5,6,8)])
corrplot(M, method = "ellipse")
library(corrplot)
corrplot(M, method = "ellipse")
dataframe<- LinkedMDAN_discord_AFI_z_9
View(dataframe)
M<-Cor(dataframe[,c(8,13,23,24,26,31,41,42,56,57,66,67,70,71)])
corrplot(M, method = "ellipse")
M<-Cor(dataframe[,c(8,13,23,24,26,31,41,42,56,57,66,67,70,71)])
corrplot(M, method = "ellipse")
dataframe<- LinkedMDAN_discord_AFI_z_9
C<-dataframe[,c(8,13,23,24,26,31,41,42)]
names(C)              )
names(C)
dataframe<- LinkedMDAN_discord_AFI_z_9
C<-dataframe[,c(56,57,66,67,70,71)]
names(C)
dataframe<- LinkedMDAN_discord_AFI_z_9
C<-dataframe[,c(56,57,66,67,70,71,89,90)]
##
## Rename variabls
names(C)<-c("AFI_Mom_diff","AFI_Mom_mean","Intel_Mom_diff","Intel_Mom_Mean","AFI_Kid_diff","AFI_Kid_mean","Intel_Kid_mean","Intel_Kid_diff")
C<-dataframe[,c(56,57,66,67,70,71,89,90)]
names(C)
